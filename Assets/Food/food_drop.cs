using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using Random = UnityEngine.Random;

public class food_drop : MonoBehaviour
{
    public GameObject leftBoundary;
    public GameObject rightBoundary;
    public float drop_height = 80;
    public GameObject food_good;
    public GameObject food_evil;
    [Range(0.0f, 1.0f)] public float evil_rate = 0.1f;

    public List<GameObject> foodList;
    private float feederTimer = 0.0f;
    private float feederRefillDelay = 30.0f;//30 seconds between feedings


    public event EventHandler OnFoodDestroy;
    [SerializeField][Range(0, 10)] private int _maxFoodDrops = 5;

    // Start is called before the first frame update
    void Start()
    {
        foodList = new List<GameObject>();
    }

    // Update is called once per frame
    void Update()
    {
        feederTimer += Time.deltaTime;

        //if (feederTimer < feederRefillDelay)
        //{
        //    if (Input.GetButtonDown("FireFood"))
        //    {
        //        //TODO: display a can't feed yet/audio
        //    }

        //    return;
        //}

        Vector4 spawnBox = new Vector4(0,0,0,0);
        if (leftBoundary != null && rightBoundary != null)
        {
            spawnBox.x = leftBoundary.transform.position.x;
            spawnBox.y = leftBoundary.transform.position.z;
            spawnBox.z = rightBoundary.transform.position.x;
            spawnBox.w = rightBoundary.transform.position.y;
        }
        else Debug.LogWarning("No boundaries found.");

        if (Input.GetButtonDown("FireFood") && foodList.Count < _maxFoodDrops)
        {
            //Debug.Log("Fired food!");
            Vector3 inst_pos = new Vector3(Random.Range(spawnBox.x, spawnBox.z), drop_height, Random.Range(spawnBox.y, spawnBox.w));
            //Debug.Log("InstPos: "+ inst_pos);
            //GameObject food_prefab = Resources.Load() as GameObject;
            if (food_good != null && food_evil != null)
            {
                GameObject new_food;
                float rando_check = Random.Range(0.0f, 1.0f);
                if( rando_check <= evil_rate){
                    new_food = GameObject.Instantiate(food_evil, inst_pos, Quaternion.identity);
                }
                else {
                    new_food = GameObject.Instantiate(food_good, inst_pos, Quaternion.identity);
                }
                //new_food.GetComponent<Rigidbody>().useGravity = true;

                foodList.Add(new_food);
            }
            else {
                Debug.LogWarning("Food not found!");
             }

            feederTimer = 0.0f;
        }
    }

    public void CleanFoodList()
    {
        for (int i = foodList.Count - 1; i >= 0; i--)
        {
            if (foodList[i].GetComponent<DestroyAfterSeconds>().IsDestroy)
            {
                GameObject.Destroy(foodList[i]);
                foodList.RemoveAt(i);
                OnFoodDestroy?.Invoke(this, EventArgs.Empty);
            }
            //if (foodList[i] == null)
            //    foodList.RemoveAt(i);
        }
    }
}
