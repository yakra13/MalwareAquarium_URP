using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class SelectFishVM : MonoBehaviour
{
    [Range(0.1f, 2.0f)] public float checkForNewFishEverySeconds = 1.0f;
    private float lastCheckedTime = 0;
    private GameObject[] fishObjectsForVMs;
    private GameObject selectedFish = null;
    private string fishtag = "fish_rjg";

    // Start is called before the first frame update
    void Start()
    {
        VM_Manager.Init();   // Actually, this shouldn't do anything, right?
        lastCheckedTime = Time.timeSinceLevelLoad;  // TODO: reload the level periodically. 
        fishObjectsForVMs = GameObject.FindGameObjectsWithTag(fishtag);
    }

    // Update is called once per frame
    void Update()
    {
        float timeSLL = Time.timeSinceLevelLoad;
        // The fish to highlight will be from the curVM index. This *ought* to be a 1-1 relationship. We can ensure that soon...
        if (timeSLL - lastCheckedTime > checkForNewFishEverySeconds)
        {
            lastCheckedTime = timeSLL;
            fishObjectsForVMs = GameObject.FindGameObjectsWithTag(fishtag);
            foreach (GameObject fishObj in fishObjectsForVMs)
            {
                print(fishObj.transform.name);
            }
        }
        if(Input.GetButtonDown("Horizontal")  ){
            VM_Manager.ShiftCurVM_Left();
            // Disable currently selected
            if (selectedFish != null)
            {
                Debug.Log("Printed fish: "+selectedFish);
                selectedFish.transform.Find("Highlight_prefab").gameObject.SetActive(false);
            }
            try
            {
                selectedFish = fishObjectsForVMs[VM_Manager.GetCurVMIndex()];
            }
            catch (System.IndexOutOfRangeException e)
            {
                Debug.LogError(e.Message);
            }
            // Enable the newly selected
            if (selectedFish != null)
            {
                selectedFish.transform.Find("Highlight_prefab").gameObject.SetActive(true);
            }
        }
    }


    //https://www.canva.com/design/DAFYxVv1zQo/iExr8whbrhcZut32KSKy3Q/edit?utm_content=DAFYxVv1zQo&utm_campaign=designshare&utm_medium=link2&utm_source=sharebutton
}
