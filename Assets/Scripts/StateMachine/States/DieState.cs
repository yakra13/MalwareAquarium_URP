using System.Collections;
using UnityEngine;

public class DieState : BaseState
{
    private float _duration = 5f;
    private float _elapsedTime = 0f;

    private Vector3 _surfacePoint;
    private Vector3 _startPosition;

    private Quaternion _startRotation;
    private Quaternion _endRotation;

    public DieState(StateMachine context, StateFactory factory)
    : base(context, factory)
    {
        //NOTE this stuff could be in the enter state?
        _startPosition = _context.transform.position;
        _startRotation = _context.transform.rotation;
        _surfacePoint = _startPosition;

        _endRotation = Quaternion.Euler(Random.Range(-20f, 20f), Random.Range(-20f, 20f), -90f);

        //NOTE:150f is cameras z position
        float relativeXPos = 150f - context.transform.position.z;
        //slope slightly less than actual slope(.5) so the further away the lower from the top of the screen
        //15f camera y position
        _surfacePoint.y = 0.4f * relativeXPos + 15f;
    }

    public override void EnterState()
    {
        _context.Animator.CrossFade("die", 0.5f);
        //if emission is on turn it off
        _context.BlendEmissionCoroutine(0.0f);
    }

    public override void UpdateState()
    {
        //float to the top of the screen while rotating to the 'death pose'
        if (_elapsedTime / _duration < 1f)
        {
            _context.transform.position = Vector3.Lerp(_startPosition, _surfacePoint, _elapsedTime / _duration);
            _context.transform.rotation = Quaternion.Lerp(_startRotation, _endRotation, _elapsedTime / _duration);
            _elapsedTime += Time.deltaTime;
        }

        CheckSwitchStates();
    }

    public override void ExitState()
    {
        //actions when exiting a state; clean up
    }

    public override void CheckSwitchStates()
    {
        //at the top of the screen and ully rotated
        if (_elapsedTime >= _duration)
            SwitchState(_factory.Dead());
    }

    public override void InitializeSubState()
    {
        //TODO
    }
}