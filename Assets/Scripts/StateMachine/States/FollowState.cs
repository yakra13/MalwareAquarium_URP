public class FollowState : BaseState
{
    private StateMachine _target;

    public FollowState(StateMachine context, StateFactory factory, StateMachine target)
    : base(context, factory)
    {
        _target = target;
    }

    public override void EnterState()
    {
        //set to swimming anim
        _context.Animator.Play("swim");
    }

    public override void UpdateState()
    {
        //follow target
        CheckSwitchStates();
    }

    public override void ExitState()
    {
        //actions when exiting a state; clean up
    }

    public override void CheckSwitchStates()
    {
        //conditions required to change states
    }

    public override void InitializeSubState()
    {
        //TODO
    }
}
