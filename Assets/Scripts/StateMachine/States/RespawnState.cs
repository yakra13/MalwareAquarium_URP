using UnityEngine;
using System.Collections;

public class RespawnState : BaseState
{
    private float _transition = 0.0f;
    private float _transitionTime = 5.0f;//fade in over 5 seconds...
    private Material _material;

    private BoidSpawner spawner;

    bool _spawnLocationFound = false;
    public RespawnState(StateMachine context, StateFactory factory)
        : base(context, factory)
    {
        _material = context.perObjectMaterial;
    }

    public override void EnterState()
    {
        //move to random spawn location
        spawner = _context.Boid.GetRandomSpawnLocation();
        

        //reset stats
        _context.CurrentBoredom = 0;
        _context.CurrentFullness = _context.Boid.boidData.maxFullness;
        _context.CurrentHealth = 100f;// _context.Boid.boidData.maxHealth;

        //reset the material
        _material.SetFloat("_Transition_Sick_Fair", 0.0f);
        _material.SetFloat("_Transition_Sick_Poor", 0.0f);
        _material.SetFloat("_Transition_Sick_Bad", 0.0f);

        //make sure enable dissolve is on to fade in
        _material.SetInt("_EnableDissolve", 1);
        _material.SetFloat("_DissolveTransition", 1.0f);

    }

    public override void UpdateState()
    {
        if (!_spawnLocationFound)
        {
            if (spawner.IsEmpty)
            {
                _spawnLocationFound = true;

                _context.transform.position = spawner.transform.position + Random.insideUnitSphere * spawner.spawnCollider.radius / 2f;
                _context.Boid.ChangeTargetRandom();
            }
        }
        else
        {
            _transition += Time.deltaTime / _transitionTime;
            _material.SetFloat("_DissolveTransition", 1f - _transition);
        }

        CheckSwitchStates();
    }

    public override void ExitState()
    {
        //disable dissolve
        _material.SetInt("_EnableDissolve", 0);
        _material.SetFloat("_DissolveTransition", 0.0f);
    }

    public override void CheckSwitchStates()
    {
        if (_transition >= 1.0f)
            SwitchState(_factory.Explore());
    }

    public override void InitializeSubState()
    {
        //TODO
    }
}
