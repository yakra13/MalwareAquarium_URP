using System;

public class StateFactory
{
    private StateMachine _context;

    public StateFactory(StateMachine context)
    {
        _context = context;
    }
    public BaseState Explore() { return new ExploreState(_context, this); }

    public BaseState Follow(StateMachine target) { return new FollowState(_context, this, target); }

    public BaseState Idle() { return new IdleState(_context, this); }

    public BaseState Eat() { return new EatState(_context, this); }

    public BaseState Die() { return new DieState(_context, this); }
    public BaseState Dead() { return new DeathState(_context, this); }

    public BaseState Respawn() { return new RespawnState(_context, this); }
}
