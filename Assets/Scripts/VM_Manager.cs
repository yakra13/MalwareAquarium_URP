using System.Collections;
using System.Collections.Generic;
using UnityEngine;

// Not really "Singleton" but following the pattern with this static class.
public static class VM_Manager
{
    public static string VMBasePath = "";
    public static string[] VMNames = { "one", "two", "three" };
    private static int curVmIndex = 0;

    public static void Init()
    {
        Debug.Log("Starting VM Manager...");
    }

    public static int GetCurVMIndex()
    {
        return curVmIndex;  // I could do the get; private set but I don't want to risk re-initialization for now.
    }

    public static void ShiftCurVM_Left()
    {
        ShiftCurVM(1);
    }

    public static void ShiftCurVM_Right()
    {
        ShiftCurVM(-1);
    }

    private static void ShiftCurVM(int shiftAmount)
    {
        try
        {
            curVmIndex = (curVmIndex + shiftAmount) % (VMNames.Length - 1); // Len-1 since Length starts at 1 and array indices start at 0. 
        }
        catch (System.IndexOutOfRangeException e)
        {
            Debug.LogError(e.Message);
        }
    }


}
